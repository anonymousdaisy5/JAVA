 fundamental points to remember-
(part1)

1. What is the output of the following code if the input is : 5 10 ?
Scanner s = new Scanner(System.in);
int a = s.nextInt();
int b = s.nextInt();
System.out.println(a+b);

ANSWER- Error
"s.nextInt()" scans and returns the next token as int. A token is part of entered line that is separated from other tokens by space, tab or newline.
So when input line is : “5 10”, then s.nextInt() returns the first token i.e. “5” as int and s.nextInt() again returns the next token i.e. “10” as int

2.What is the output of the following code if the input string is "Coding Ninjas"?
Scanner s = new Scanner(System.in);
String str;
str = s.next();
System.out.print(str);

ANSWER- Coding
s.next() returns the next token as String. A token is part of entered line that is separated from other tokens by space, tab or newline.
So when input line is - “Coding Ninjas” then s.next() returns the first token i.e. Coding

3.What is the output of the following code if input is :
10 abc def

Scanner s = new Scanner(System.in);
int a = s.nextInt();
String str = s.next();
System.out.print(a);
System.out.println(str);

ANSWER- 10abc
s.nextInt() scans and returns the next token as int. A token is part of entered line that is separated from other tokens by space, tab or newline. 
So when input line is - “10 abc def” then s.nextInt() returns the first token as int i.e. “10” and s.next() returns the next token "abc”. 

While printing, in first statement a is printed and then str. There is no space or nextline between both print. Hence output is : 10abc.

4.What is the output of the following code if input is : abc def 10
Scanner s = new Scanner(System.in);
String str = s.next();
int a = s.nextInt();
System.out.print(str + " " + a);

ANSWER-  InputMismatchException

s.next()" scans and returns the next token as String. A token is part of entered line that is separated from other tokens by space, tab or newline.
So when input line is - “abc def 10” then s.next() returns the first token as String i.e. “abc” 
and s.nextInt() tries to convert the next token i.e. “def” into an int, which gives InputMismatchException.

5.Short is of 16 bits. So the smallest value short can store is : -2^15.
6.Range of byte(8 bits) is : -2^7 to 2^7-1
7.System treats all decimal numbers as double by default. So 1.4 is stored as double(which is of 8 bytes). 
When we will try put a double into a float(which is of 4 bytes), it will give you error.
8.What will be the output of the following statement ?
System.out.println('a' + 1);
When you add a character and an int, it will add the ASCII value of  char ‘a’ i.e 97  and int 1. So ans will be 98.
9.What will be the output ?
int i = 'c';
System.out.println(i);
When we put char ‘c’ into an int, its ASCII value will be put in the int i.e. 99.
10. What is the error in this code?
byte b = 50;
b = b * 50;
 2nd statement, b is multiplied with 50 where b is byte variable and 50 is an integer. 
 So after the multiplication, result comes as an integer value which is 2500. Now we are trying to assign this integer to a byte variable, which will cause the error.
 
 11.public class  Solution{
    public static void main(String [] args)  {
        double a = 6 / 4;
        int b  = 6 / 4;
        double c = a + b;
        System.out.println(c);
    }
}
When 6 / 4 is performed, both the operands of / are integer.
Hence answer will be an int i.e. 1. When we store it in a (which is double), value of a will be 1.0 and value of b will be 1. Thus a + b will be 2.0.

12.Predict the output

public class  Solution{
    public static void main(String [] args)  {
        double a = 55.5;
        int b = 55;
        a = a % 10;
        b = b % 10;
        System.out.println(a + " "  + b);
      }
 }
 operator gives remainder. So a % 10 will give us 5.5 and b % 10 will give us 5. Hence output is : 5.5 5
 
 13.Predict the output
Send Feedback
public class  Solution {
    public static void main(String [] args)  {
        int var1 = 5;
        int var2 = 6;
        System.out.print(var1 > var2);
    }
}

It is a relational operator. So it will give the result as true or false only. var1 is not greater than var2, hence result is false.
14.
 
